services:
  api:
    container_name: api
    platform: linux/amd64
    build: .
    env_file: .env
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=${BACKEND_PORT}"
      # - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlist=http://localhost:3000" # 디버깅 용
      - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlist=${FRONTEND_URL}"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.routers.api.middlewares=api-cors@docker"

networks:
  backend:
    driver: bridge
